2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : Starting TestCase _run_test_case A2DP A2DP/SRC/SET/BV-06-C
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : pre_run A2DP A2DP/SRC/SET/BV-06-C
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : About to run test case A2DP A2DP/SRC/SET/BV-06-C with commands:
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 0) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.core_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 1) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 2) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.start of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000012B47FA23C0>,) kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 3) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 4) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.wait_iut_ready_event of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=(False,) kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 5) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000012B47F6C040> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=72 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 6) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gap at 0x0000012B444EB560> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=72 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 7) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gap_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=(b'Tester_08E44E',) kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 8) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function gap_read_ctrl_info at 0x0000012B44512E80> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 9) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000012B47F6C0E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 10) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function set_pts_addr at 0x0000012B444EB100> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=('00:1B:DC:08:E4:4E', 0) kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 11) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gatt at 0x0000012B444EB6A0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 12) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gatt_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 13) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_a2dp at 0x0000012B444FCC20> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 14) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.a2dp_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=70 args=() kwds={}
2025-09-15 20:24:51,103 LT1-thread root DEBUG client.py                 81    logger_log                : 15) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function a2dp_register_ep at 0x0000012B444FDA80> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=(0, 1) kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : 16) class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method Stack.cleanup of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=() kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : 17) class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method ZephyrCtl.stop of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=0 args=() kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : pre_run, run pre test case script
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.core_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-15 20:24:51,113 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:51,123 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.start of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000012B47FA23C0>,) kwds={}
2025-09-15 20:24:51,123 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000012B47FA23C0>,), kwds={}
2025-09-15 20:24:51,123 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.start
2025-09-15 20:24:51,123 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.flush_serial
2025-09-15 20:24:52,331 LT1-thread root DEBUG client.py                 81    logger_log                : Starting socat process: socat.exe -x -v tcp:10.17.12.103:62433,retry=100,interval=1 /dev/ttyS43,raw,b115200
2025-09-15 20:24:52,341 LT1-thread root DEBUG client.py                 81    logger_log                : accept
2025-09-15 20:24:52,431 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : BTPWorkerThread-1129 (_rx_task) started
2025-09-15 20:24:52,431 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-15 20:24:52,431 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:52,431 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.wait_iut_ready_event of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(False,) kwds={}
2025-09-15 20:24:52,431 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(False,), kwds={}
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : IUT ready event received OK
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000012B47F6C040> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=73 args=() kwds={}
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gap at 0x0000012B444EB560> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=73 args=() kwds={}
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: gap_reg (GAP)
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '1'
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010001'
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-15 20:24:52,441 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,084 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,104 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-15 20:24:56,124 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: GAP
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 1 255 ''
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0101ff0000'
2025-09-15 20:24:56,164 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,254 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x01, ctrl_index=0xff, data_len=0x06) bytearray(b'\x01\x01\xff\x06\x00')
2025-09-15 20:24:56,294 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 6 bytes data
2025-09-15 20:24:56,314 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'6e ff 7f 1f fe 07'}, bytearray(b'n\xff\x7f\x1f\xfe\x07')
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gap_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=(b'Tester_08E44E',) kwds={}
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(b'Tester_08E44E',), kwds={}
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function gap_read_ctrl_info at 0x0000012B44512E80> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : gap_read_ctrl_info
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 3 0 ''
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0103000000'
2025-09-15 20:24:56,344 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,415 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,435 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x03, ctrl_index=0x00, data_len=0x115) bytearray(b'\x01\x03\x00\x15\x01')
2025-09-15 20:24:56,465 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 277 bytes data
2025-09-15 20:24:56,485 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'19 78 ee 69 17 d0 d3 06 02 00 13 02 00 00 00 00 00 62 74 70 5f}, bytearray(b'\x19x\xeei\x17\xd0\xd3\x06\x02\x00\x13\x02\x00\x00\x00\x00\x00btp_tester\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=3, ctrl_index=0, data_len=277) (b'\x19x\xeei\x17\xd0\xd3\x06\x02\x00\x13\x02\x00\x00\x00\x00\x00btp_tester\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',)
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : IUT address 'd01769ee7819' 'public'
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 531
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000012B47F6C0E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function set_pts_addr at 0x0000012B444EB100> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=('00:1B:DC:08:E4:4E', 0) kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=('00:1B:DC:08:E4:4E', 0), kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gatt at 0x0000012B444EB6A0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: gatt_reg (GATT)
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '2'
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010002'
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-15 20:24:56,515 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,595 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,615 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-15 20:24:56,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: GATT
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : send, 2 1 255 ''
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0201ff0000'
2025-09-15 20:24:56,655 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,735 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,755 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x02, op=0x01, ctrl_index=0xff, data_len=0x05) bytearray(b'\x02\x01\xff\x05\x00')
2025-09-15 20:24:56,795 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes data
2025-09-15 20:24:56,815 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'fe fe ff fd 03'}, bytearray(b'\xfe\xfe\xff\xfd\x03')
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gatt_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_a2dp at 0x0000012B444FCC20> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: a2dp_reg (A2DP)
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '35'
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010023'
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-15 20:24:56,835 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:56,915 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:56,925 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-15 20:24:56,935 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: A2DP
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 1 255 ''
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2301ff0000'
2025-09-15 20:24:56,965 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:57,035 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:57,046 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x01, ctrl_index=0xff, data_len=0x02) bytearray(b'#\x01\xff\x02\x00')
2025-09-15 20:24:57,046 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 2 bytes data
2025-09-15 20:24:57,056 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'fe 7f'}, bytearray(b'\xfe\x7f')
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.a2dp_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=71 args=() kwds={}
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function a2dp_register_ep at 0x0000012B444FDA80> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(0, 1) kwds={}
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(0, 1), kwds={}
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_register_ep
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 2 0 "bytearray(b'\\x00\\x01')"
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '23020002000001'
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-15 20:24:57,085 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:24:57,145 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:24:57,166 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x02, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x02\x00\x00\x00')
2025-09-15 20:24:57,166 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:24:57,176 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=2, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:24:57,176 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:43,326 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-15 20:25:43,326 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:43,326 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-15 20:25:43,449 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:25:43,538 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:43,558 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-15 20:25:43,558 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:25:43,568 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:25:43,588 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:25:43,588 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-15 20:25:43,588 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:43,588 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:43,630 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:43,630 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:43,630 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:43,634 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:43,634 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-15 20:25:43,634 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:25:43,635 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:25:43,636 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-15 20:25:43,636 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-15 20:25:44,290 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:44,291 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-15 20:25:44,291 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-15 20:25:44,291 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-15 20:25:44,291 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-15 20:25:44,291 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-15 20:25:44,292 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-15 20:25:44,293 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-15 20:25:44,293 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-15 20:25:44,328 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-15 20:25:44,594 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:44,594 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:44,594 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:44,596 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:44,599 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:44,599 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:44,599 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:45,597 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:45,597 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:45,598 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:45,600 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:45,602 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:45,602 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:45,602 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:46,613 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:46,614 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:46,614 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:46,617 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:46,619 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:46,619 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:46,619 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:47,623 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:47,624 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:47,624 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:47,626 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:47,628 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:47,628 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:47,628 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:48,627 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:48,627 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:48,627 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:48,629 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:48,631 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:48,632 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:48,632 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:49,642 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:49,642 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:49,643 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:49,645 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:49,647 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:49,648 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:49,648 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:50,653 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:50,654 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:50,654 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:50,656 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:50,658 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:50,658 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:50,659 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:51,660 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:51,661 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:51,661 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:51,663 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:51,666 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:25:51,666 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:25:51,666 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:25:52,665 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:25:52,666 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:52,666 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-15 20:25:52,666 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-15 20:25:52,666 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-15 20:25:52,667 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-15 20:25:52,667 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:25:52,711 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:52,743 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-15 20:25:52,765 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:25:52,784 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:25:52,784 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:52,784 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-15 20:25:52,795 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:25:52,795 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:25:52,805 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:25:52,815 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-15 20:25:52,815 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-15 20:25:57,798 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-15 20:25:57,798 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-15 20:25:57,798 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-15 20:25:57,798 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:25:57,868 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:57,888 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-15 20:25:57,908 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:57,938 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-15 20:25:57,938 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-15 20:25:57,938 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-15 20:26:01,010 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-15 20:26:01,010 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:01,010 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:01,856 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:01,857 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-15 20:26:01,857 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-15 20:26:01,857 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-15 20:26:01,857 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-15 20:26:01,858 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-15 20:26:01,925 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:01,926 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-15 20:26:01,926 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-15 20:26:01,926 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-15 20:26:01,926 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-15 20:26:01,927 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-15 20:26:01,928 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-15 20:26:01,928 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-15 20:26:01,964 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-15 20:26:01,964 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-15 20:26:02,064 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:02,084 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-15 20:26:02,124 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:02,144 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:02,174 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:02,174 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:02,174 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:02,174 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:02,174 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:02,174 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:02,174 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:03,186 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:03,186 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:03,187 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:03,188 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:03,191 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:03,191 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:03,191 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:04,192 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:04,192 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:04,193 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:04,195 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:04,197 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:04,197 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:04,197 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:05,195 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:05,195 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:05,195 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:05,197 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:05,201 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:05,201 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:05,201 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:06,207 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:06,207 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:06,207 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:06,209 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:06,211 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:06,212 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:06,212 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:07,209 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:07,210 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:07,210 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:07,212 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:07,214 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:07,214 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:07,214 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:08,215 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:08,218 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:08,220 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:08,220 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:08,220 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:09,232 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:09,232 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:09,233 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:09,235 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:09,237 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:09,237 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:09,237 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:10,236 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:10,237 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:10,237 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-15 20:26:10,237 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-15 20:26:10,237 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-15 20:26:10,238 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-15 20:26:10,238 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:10,314 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:10,346 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-15 20:26:10,367 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:10,397 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:26:10,397 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:10,397 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-15 20:26:10,407 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:26:10,427 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:26:10,447 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:26:10,467 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-15 20:26:10,487 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-15 20:26:15,412 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-15 20:26:15,412 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-15 20:26:15,412 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-15 20:26:15,412 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:15,492 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:15,512 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-15 20:26:15,532 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:15,552 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-15 20:26:15,552 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-15 20:26:15,552 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-15 20:26:15,552 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:15,552 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:15,552 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:16,560 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:16,560 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:16,560 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:16,560 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:18,662 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-15 20:26:18,662 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:18,662 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:19,233 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,233 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-15 20:26:19,233 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-15 20:26:19,234 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:19,235 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:19,235 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:19,235 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-15 20:26:19,235 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-15 20:26:19,304 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,305 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-15 20:26:19,305 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-15 20:26:19,306 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,307 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-15 20:26:19,307 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-15 20:26:19,307 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-15 20:26:19,307 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-15 20:26:19,307 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-15 20:26:19,308 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-15 20:26:19,308 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-15 20:26:19,347 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-15 20:26:19,577 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:19,711 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:19,731 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-15 20:26:19,761 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:19,786 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:19,832 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:19,833 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:19,833 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:19,837 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:19,840 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:19,841 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:19,841 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:20,842 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:20,843 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:20,844 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:20,847 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:20,849 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:20,849 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:20,849 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:21,863 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:21,863 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:21,863 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:21,865 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:21,867 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:21,867 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:21,867 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:22,880 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:22,881 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:22,881 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:22,883 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:22,886 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:22,886 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:22,886 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:23,885 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:23,886 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:23,886 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:23,888 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:23,890 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:23,890 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:23,891 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:24,892 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:24,893 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:24,893 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:24,895 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:24,897 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:24,897 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:24,897 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:25,909 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:25,909 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:25,910 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:25,911 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:25,913 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:25,913 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:25,913 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:26,916 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:26,917 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:26,917 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:26,919 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:26,921 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:26,921 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:26,922 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:27,921 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:27,922 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:27,922 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:27,923 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:27,926 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:27,926 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:27,926 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:28,927 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:28,928 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:28,928 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-15 20:26:28,928 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-15 20:26:28,928 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-15 20:26:28,929 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-15 20:26:28,929 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:28,989 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:29,021 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-15 20:26:29,037 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:29,066 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:26:29,108 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:29,128 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-15 20:26:29,168 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:26:29,188 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:26:29,218 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:26:29,238 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-15 20:26:29,258 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-15 20:26:34,081 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-15 20:26:34,081 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-15 20:26:34,081 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-15 20:26:34,081 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:34,141 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:34,161 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-15 20:26:34,181 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:34,201 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-15 20:26:34,201 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-15 20:26:34,201 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-15 20:26:37,280 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-15 20:26:37,280 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:37,280 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:38,125 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:38,126 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-15 20:26:38,126 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-15 20:26:38,126 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-15 20:26:38,126 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-15 20:26:38,126 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-15 20:26:38,127 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:38,127 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-15 20:26:38,127 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:38,127 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:38,127 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:38,128 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-15 20:26:38,128 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-15 20:26:38,190 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:38,191 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-15 20:26:38,191 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-15 20:26:38,191 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-15 20:26:38,191 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-15 20:26:38,192 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-15 20:26:38,193 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-15 20:26:38,193 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-15 20:26:38,193 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-15 20:26:38,216 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 3 bytes
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-15 20:26:38,226 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-15 20:26:38,256 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 2 bytes
2025-09-15 20:26:38,276 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-15 20:26:38,326 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-15 20:26:38,346 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-15 20:26:38,376 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-15 20:26:38,396 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-15 20:26:38,416 BTPWorkerThread-1129 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-15 20:26:38,426 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:38,446 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-15 20:26:38,486 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-15 20:26:38,506 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-15 20:26:38,536 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:38,536 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-15 20:26:38,536 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:38,536 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:38,536 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:38,536 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:38,536 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:39,552 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:39,553 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:39,553 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:39,555 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:39,557 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:39,557 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:39,557 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:40,561 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:40,561 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:40,561 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:40,561 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:40,561 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:40,561 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:40,561 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-15 20:26:40,760 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-15 20:26:41,571 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:41,571 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:41,571 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:41,571 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:41,571 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:41,571 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:41,571 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:42,579 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:42,579 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:42,579 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:42,579 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:42,579 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:42,579 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:42,579 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:43,587 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:43,587 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:43,587 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:43,587 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:43,587 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:43,587 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:43,587 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:44,593 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:44,593 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:44,593 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:44,593 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:44,593 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:44,593 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:44,593 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:45,601 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:45,601 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:45,601 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:45,601 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:45,601 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-15 20:26:45,601 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-15 20:26:45,601 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-15 20:26:46,606 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-15 20:26:46,606 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:46,606 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-15 20:26:46,606 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-15 20:26:46,616 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_START_TEST Start Test Case 

+156 ms
 A2DP/SRC/SET/BV-06-C A2DP/SRC/SET/BV-06-C

2025-09-15 20:26:49,751 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_FINAL_VERDICT Final Verdict 

+105500 ms
 A2DP/SRC/SET/BV-06-C PASS

2025-09-15 20:26:49,760 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_FINAL_VERDICT Encrypted Verdict 

+105500 ms
 A2DP/SRC/SET/BV-06-C A1#ZWY4MzQ5MDg3MmQwNTIxOGQzMzQ5YjY2ODA5M2MzNjQ5ZDY4NmY0Yjc2MzIzM2VkNTUyNTFhNGU4Mjg1MjI0NA==#3lvh9yxcN9DU9rycewQkawztOHGvEqZk4He3whcCz9Nio0wJE2c68WBuvqLVc5Se

2025-09-15 20:26:49,770 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_END_TEST Test Case Ended 

+105500 ms
 A2DP/SRC/SET/BV-06-C A2DP/SRC/SET/BV-06-C

2025-09-15 20:26:49,840 LT1-callback root DEBUG client.py                 81    logger_log                : ClientCallback, set_result, run_test_case, PASS
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : After run_test_case error_code=0 status='PASS'
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : post_run A2DP A2DP/SRC/SET/BV-06-C 0
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method Stack.cleanup of <autopts.ptsprojects.stack.stack.Stack object at 0x0000012B470B63C0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method ZephyrCtl.stop of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000012B47788D40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.stop
2025-09-15 20:26:49,840 LT1-thread root DEBUG client.py                 81    logger_log                : About to reset DUT: JLink -CommandFile reset.jlink -usb 1063214216 -device MIMXRT1176XXXA_M7
2025-09-15 20:26:50,226 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-15 20:26:50,246 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x80, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x80\xff\x00\x00')
2025-09-15 20:26:50,266 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-15 20:26:50,296 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=0, op=128, ctrl_index=255, data_len=0) (b'',)
2025-09-15 20:26:50,316 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : core_iut_ready_ev
2025-09-15 20:26:50,336 LT1-thread root DEBUG client.py                 81    logger_log                : IUT ready event received OK
2025-09-15 20:26:50,336 LT1-thread root DEBUG client.py                 81    logger_log                : Waiting for _rx_worker to finish ...
2025-09-15 20:26:51,337 BTPWorkerThread-1129 (_rx_task) root DEBUG client.py                 81    logger_log                : BTPWorkerThread-1129 (_rx_task) finishing...
2025-09-15 20:26:51,337 LT1-thread root DEBUG client.py                 81    logger_log                : Waiting for _rx_worker to finish ...
2025-09-15 20:26:54,344 LT1-thread root DEBUG client.py                 81    logger_log                : post_run, cleanup running post test case script
2025-09-15 20:26:54,344 LT1-thread root DEBUG client.py                 81    logger_log                : post_run, run post test case script
2025-09-15 20:26:54,464 LT1-thread root DEBUG client.py                 81    logger_log                : Done TestCase _run_test_case A2DP A2DP/SRC/SET/BV-06-C

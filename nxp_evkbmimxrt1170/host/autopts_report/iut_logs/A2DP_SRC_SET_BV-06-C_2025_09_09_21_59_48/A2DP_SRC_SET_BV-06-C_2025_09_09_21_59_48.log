2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : Starting TestCase _run_test_case A2DP A2DP/SRC/SET/BV-06-C
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : pre_run A2DP A2DP/SRC/SET/BV-06-C
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : About to run test case A2DP A2DP/SRC/SET/BV-06-C with commands:
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 0) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.core_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 1) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 2) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.start of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000019970B45BB0>,) kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 3) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 4) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.wait_iut_ready_event of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(False,) kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 5) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gap at 0x000001996D3C7100> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=130 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 6) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gap_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=(b'Tester_08E44E',) kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 7) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function gap_read_ctrl_info at 0x000001996D3F68E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 8) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000019970B05D00> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 9) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function set_pts_addr at 0x000001996D3C6CA0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=('00:1B:DC:08:E4:4E', 0) kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 10) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gatt at 0x000001996D3C7240> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 11) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gatt_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 12) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_a2dp at 0x000001996D3C87C0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 13) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.a2dp_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=127 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 14) class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function a2dp_register_ep at 0x000001996D3C94E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=(0, 1) kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 15) class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method Stack.cleanup of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : 16) class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method ZephyrCtl.stop of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=1 args=() kwds={}
2025-09-09 21:59:48,518 LT1-thread root DEBUG client.py                 81    logger_log                : pre_run, run pre test case script
2025-09-09 21:59:48,528 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.core_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=() kwds={}
2025-09-09 21:59:48,528 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:48,528 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=() kwds={}
2025-09-09 21:59:48,528 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:48,538 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.start of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000019970B45BB0>,) kwds={}
2025-09-09 21:59:48,538 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(<autopts.ptsprojects.zephyr.ztestcase.ZTestCase object at 0x0000019970B45BB0>,), kwds={}
2025-09-09 21:59:48,538 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.start
2025-09-09 21:59:48,538 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.flush_serial
2025-09-09 21:59:49,819 LT1-thread root DEBUG client.py                 81    logger_log                : Starting socat process: socat.exe -x -v tcp:10.17.12.103:60061,retry=100,interval=1 /dev/ttyS43,raw,b115200
2025-09-09 21:59:49,839 LT1-thread root DEBUG client.py                 81    logger_log                : accept
2025-09-09 21:59:49,949 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : BTPWorkerThread-1940 (_rx_task) started
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.hw_reset of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=() kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method ZephyrCtl.wait_iut_ready_event of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=(False,) kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(False,), kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : IUT ready event received OK
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gap at 0x000001996D3C7100> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=131 args=() kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:49,959 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: gap_reg (GAP)
2025-09-09 21:59:49,969 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '1'
2025-09-09 21:59:49,969 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010001'
2025-09-09 21:59:49,969 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-09 21:59:49,969 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:53,623 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:53,643 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-09 21:59:53,663 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: GAP
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 1 255 ''
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0101ff0000'
2025-09-09 21:59:53,693 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:53,763 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:53,782 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x01, ctrl_index=0xff, data_len=0x06) bytearray(b'\x01\x01\xff\x06\x00')
2025-09-09 21:59:53,823 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 6 bytes data
2025-09-09 21:59:53,843 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'6e ff 7f 1f fe 07'}, bytearray(b'n\xff\x7f\x1f\xfe\x07')
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gap_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=(b'Tester_08E44E',) kwds={}
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(b'Tester_08E44E',), kwds={}
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function gap_read_ctrl_info at 0x000001996D3F68E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : gap_read_ctrl_info
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 3 0 ''
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0103000000'
2025-09-09 21:59:53,873 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:53,943 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:53,963 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x03, ctrl_index=0x00, data_len=0x115) bytearray(b'\x01\x03\x00\x15\x01')
2025-09-09 21:59:54,003 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 277 bytes data
2025-09-09 21:59:54,023 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'19 78 ee 69 17 d0 d3 06 02 00 13 02 00 00 00 00 00 62 74 70 5f}, bytearray(b'\x19x\xeei\x17\xd0\xd3\x06\x02\x00\x13\x02\x00\x00\x00\x00\x00btp_tester\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=3, ctrl_index=0, data_len=277) (b'\x19x\xeei\x17\xd0\xd3\x06\x02\x00\x13\x02\x00\x00\x00\x00\x00btp_tester\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',)
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : IUT address 'd01769ee7819' 'public'
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 531
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function test_cases.<locals>.<lambda> at 0x0000019970B05D00> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function set_pts_addr at 0x000001996D3C6CA0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=('00:1B:DC:08:E4:4E', 0) kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=('00:1B:DC:08:E4:4E', 0), kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_gatt at 0x000001996D3C7240> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: gatt_reg (GATT)
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '2'
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010002'
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-09 21:59:54,053 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:54,123 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:54,123 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-09 21:59:54,133 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: GATT
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : send, 2 1 255 ''
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0201ff0000'
2025-09-09 21:59:54,163 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:54,233 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:54,253 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x02, op=0x01, ctrl_index=0xff, data_len=0x05) bytearray(b'\x02\x01\xff\x05\x00')
2025-09-09 21:59:54,293 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes data
2025-09-09 21:59:54,313 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'fe fe ff fd 03'}, bytearray(b'\xfe\xfe\xff\xfd\x03')
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.gatt_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function core_reg_svc_a2dp at 0x000001996D3C87C0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_univ: a2dp_reg (A2DP)
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : send, 0 3 255 '35'
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '0003ff010023'
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : core_reg_svc_rsp_succ
2025-09-09 21:59:54,333 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:54,393 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:54,413 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x03, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x03\xff\x00\x00')
2025-09-09 21:59:54,433 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=0, op=3, ctrl_index=255, data_len=0) (b'',)
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : expected ((0, 3, 255, 0), (b'',))
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : response is valid
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : Reading supported commands for service: A2DP
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 1 255 ''
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2301ff0000'
2025-09-09 21:59:54,463 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:54,533 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:54,553 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x01, ctrl_index=0xff, data_len=0x02) bytearray(b'#\x01\xff\x02\x00')
2025-09-09 21:59:54,573 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 2 bytes data
2025-09-09 21:59:54,593 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'fe 7f'}, bytearray(b'\xfe\x7f')
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<bound method Stack.a2dp_init of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=128 args=() kwds={}
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFunc'>, func=<function a2dp_register_ep at 0x000001996D3C94E0> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=(0, 1) kwds={}
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(0, 1), kwds={}
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_register_ep
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 2 0 "bytearray(b'\\x00\\x01')"
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '23020002000001'
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-09 21:59:54,624 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 21:59:54,693 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 21:59:54,713 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x02, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x02\x00\x00\x00')
2025-09-09 21:59:54,733 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 21:59:54,764 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=2, ctrl_index=0, data_len=0) (b'',)
2025-09-09 21:59:54,764 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:00:53,866 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-09 22:00:53,866 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:00:53,866 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-09 22:00:54,077 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:00:54,157 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:54,176 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-09 22:00:54,196 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:00:54,216 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:00:54,236 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:00:54,236 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-09 22:00:54,236 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:54,236 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:00:56,802 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:00:56,802 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:00:56,802 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:00:56,808 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:56,808 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:56,809 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-09 22:00:56,810 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:00:56,810 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:00:56,810 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:00:56,810 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-09 22:00:56,810 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-09 22:00:57,250 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:00:57,250 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:57,250 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:57,250 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:00:57,455 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:57,456 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-09 22:00:57,456 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-09 22:00:57,457 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:57,458 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-09 22:00:57,458 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-09 22:00:57,458 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-09 22:00:57,458 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-09 22:00:57,459 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-09 22:00:57,459 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-09 22:00:57,459 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-09 22:00:57,469 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-09 22:00:57,499 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:00:57,499 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:00:57,499 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:00:58,253 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:00:58,253 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:58,253 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:58,255 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:00:58,258 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:00:58,258 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:00:58,258 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:00:59,259 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:00:59,259 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:59,259 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:00:59,270 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:00:59,273 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:00:59,274 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:00:59,274 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:00,271 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:00,271 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:00,271 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:00,274 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:00,276 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:00,276 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:00,276 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:01,281 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:01,281 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:01,282 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:01,292 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:01,299 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:01,301 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:01,302 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:02,295 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:02,295 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:02,295 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:02,297 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:02,299 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:02,299 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:02,299 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:03,308 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:03,308 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:03,308 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:03,310 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:03,313 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:03,314 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:03,314 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:04,325 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:04,325 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:04,325 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:04,327 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:04,330 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:04,330 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:04,330 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:05,343 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:05,343 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:05,343 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-09 22:01:05,343 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-09 22:01:05,344 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-09 22:01:05,344 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-09 22:01:05,344 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:05,406 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:05,438 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-09 22:01:05,458 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:05,488 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:05,488 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:05,488 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-09 22:01:05,518 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:01:05,528 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:01:05,558 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:01:05,578 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-09 22:01:05,598 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-09 22:01:10,506 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-09 22:01:10,506 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-09 22:01:10,506 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-09 22:01:10,506 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:10,586 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:10,606 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-09 22:01:10,626 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:10,656 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:10,656 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-09 22:01:10,656 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-09 22:01:13,729 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-09 22:01:13,729 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:13,729 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-09 22:01:14,678 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:14,798 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:14,818 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-09 22:01:14,838 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:01:14,838 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:01:14,838 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:14,838 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:14,838 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:14,838 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:22,575 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:22,575 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:22,575 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:22,583 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:22,584 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-09 22:01:22,584 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-09 22:01:22,584 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:01:22,585 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:01:22,586 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:22,586 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-09 22:01:22,586 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-09 22:01:22,647 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-09 22:01:22,648 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-09 22:01:22,649 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-09 22:01:22,650 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-09 22:01:22,687 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:22,687 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-09 22:01:22,687 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:01:22,697 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:01:22,697 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:01:22,697 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-09 22:01:22,697 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-09 22:01:22,887 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:22,887 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:22,887 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:22,887 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:22,897 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:22,897 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:22,907 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:23,896 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:23,897 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:23,897 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:23,899 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:23,902 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:23,902 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:23,902 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:24,912 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:24,912 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:24,912 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:24,914 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:24,916 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:24,917 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:24,917 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:25,916 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:25,917 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:25,917 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:25,918 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:25,921 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:25,921 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:25,921 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:26,930 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:26,931 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:26,931 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:26,933 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:26,935 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:26,935 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:26,935 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:27,936 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:27,937 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:27,937 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:27,943 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:27,949 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:27,949 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:27,949 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:28,955 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:28,956 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:28,956 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:28,958 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:28,960 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:28,960 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:28,960 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:29,960 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:29,960 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:29,960 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:29,971 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:29,976 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:29,977 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:29,977 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:30,978 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:30,979 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:30,980 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-09 22:01:30,980 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-09 22:01:30,980 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-09 22:01:30,980 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-09 22:01:30,981 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:31,042 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:31,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-09 22:01:31,104 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:31,142 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:31,142 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:31,142 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-09 22:01:31,142 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:01:31,142 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:01:31,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:01:31,172 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-09 22:01:31,192 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-09 22:01:36,155 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-09 22:01:36,155 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-09 22:01:36,155 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-09 22:01:36,155 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:36,225 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:36,245 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-09 22:01:36,265 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:36,295 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:36,295 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-09 22:01:36,295 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-09 22:01:39,372 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-09 22:01:39,372 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:39,372 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-09 22:01:40,316 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:40,416 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:40,436 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-09 22:01:40,476 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:01:40,496 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:01:40,526 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:40,526 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:40,526 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:40,526 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:43,065 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:43,065 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:43,066 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:43,071 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-09 22:01:43,072 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-09 22:01:43,073 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-09 22:01:43,146 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:43,146 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-09 22:01:43,147 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-09 22:01:43,148 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-09 22:01:43,162 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-09 22:01:43,541 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:43,541 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:43,541 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:43,541 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:43,541 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:43,541 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:43,541 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:44,548 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:44,549 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:44,549 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:44,551 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:44,554 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:44,554 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:44,554 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:45,566 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:45,567 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:45,567 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:45,568 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:45,571 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:45,572 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:45,572 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:46,572 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:46,573 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:46,573 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:46,575 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:46,577 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:46,577 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:46,578 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:47,578 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:47,578 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:47,578 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:47,581 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:47,583 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:47,583 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:47,583 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:48,585 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:48,586 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:48,586 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:48,588 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:48,596 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:48,596 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:48,596 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:49,600 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:49,601 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:49,601 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:49,609 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:49,614 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:49,614 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:49,615 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:50,616 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:50,617 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:50,617 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:50,619 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:50,621 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1029
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:01:50,621 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:50,621 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:01:51,626 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:01:51,627 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1029, Move the IUT out of range to create a link loss scenario.

Action: This can be also be done by placing the IUT or PTS in an RF shielded box., A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:51,627 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_release
2025-09-09 22:01:51,628 LT1-thread root DEBUG client.py                 81    logger_log                : send, 35 9 0 ''
2025-09-09 22:01:51,628 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '2309000000'
2025-09-09 22:01:51,628 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_command_rsp_succ
2025-09-09 22:01:51,629 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:51,689 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:51,720 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x09, ctrl_index=0x00, data_len=0x00) bytearray(b'#\t\x00\x00\x00')
2025-09-09 22:01:51,744 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:51,764 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=35, op=9, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:51,764 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:51,764 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x85, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x85\x00\x01\x00')
2025-09-09 22:01:51,794 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:01:51,814 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:01:51,824 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=133, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:01:51,844 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_release_rsp b'\x00'
2025-09-09 22:01:51,864 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Release failed with error code: (0,)
2025-09-09 22:01:56,777 LT1-thread root DEBUG client.py                 81    logger_log                : gap_disconn None 224
2025-09-09 22:01:56,777 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 15 0 "bytearray(b'\\xe0N\\xe4\\x08\\xdc\\x1b\\x00')"
2025-09-09 22:01:56,777 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010f000700e04ee408dc1b00'
2025-09-09 22:01:56,777 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:01:56,847 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:56,867 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x0f, ctrl_index=0x00, data_len=0x00) bytearray(b'\x01\x0f\x00\x00\x00')
2025-09-09 22:01:56,887 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:56,917 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1029 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:01:56,917 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-09 22:01:56,917 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-09 22:01:59,984 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 33
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Please make IUT general discoverable.
    style: MMI_Style_Ok_Cancel1 0x11041
2025-09-09 22:01:59,984 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:01:59,984 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 33, Please make IUT general discoverable., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_conn
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : gap_set_gendiscov
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : send, 1 8 0 '1'
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : sending frame '010800010001'
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : gap_command_rsp_succ
2025-09-09 22:02:00,939 LT1-thread root DEBUG client.py                 81    logger_log                : read
2025-09-09 22:02:01,049 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:01,069 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x08, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x08\x00\x04\x00')
2025-09-09 22:02:01,099 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:02:01,119 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:02:01,149 LT1-thread root DEBUG client.py                 81    logger_log                : received Header(svc_id=1, op=8, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:02:01,149 LT1-thread root DEBUG client.py                 81    logger_log                : __gap_current_settings_update (b'\x1b\x02\x00\x00',)
2025-09-09 22:02:01,149 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 33 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:01,149 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:03,706 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:03,707 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:03,707 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:03,715 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:03,716 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x82, ctrl_index=0x00, data_len=0x0d) bytearray(b'\x01\x82\x00\r\x00')
2025-09-09 22:02:03,716 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 13 bytes data
2025-09-09 22:02:03,716 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 00 00 00 00 00 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00')
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=130, ctrl_index=0, data_len=13) (b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00',)
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_connected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00\x00\x00\x00\x00\x00\x00'
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x80, ctrl_index=0x00, data_len=0x04) bytearray(b'\x01\x80\x00\x04\x00')
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 4 bytes data
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'1b 02 00 00'}, bytearray(b'\x1b\x02\x00\x00')
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=128, ctrl_index=0, data_len=4) (b'\x1b\x02\x00\x00',)
2025-09-09 22:02:03,717 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_new_settings_ev_ b'\x1b\x02\x00\x00'
2025-09-09 22:02:03,718 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : __gap_current_settings_update 539
2025-09-09 22:02:03,785 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:03,785 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x91, ctrl_index=0x00, data_len=0x09) bytearray(b'\x01\x91\x00\t\x00')
2025-09-09 22:02:03,785 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 9 bytes data
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 01 10'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10')
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=145, ctrl_index=0, data_len=9) (b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10',)
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_encryption_change_ev_
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : enc change received b'\xe0N\xe4\x08\xdc\x1b\x00\x01\x10'
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 1, 16)
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x89, ctrl_index=0x00, data_len=0x08) bytearray(b'\x01\x89\x00\x08\x00')
2025-09-09 22:02:03,786 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 8 bytes data
2025-09-09 22:02:03,787 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00 02'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00\x02')
2025-09-09 22:02:03,787 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=137, ctrl_index=0, data_len=8) (b'\xe0N\xe4\x08\xdc\x1b\x00\x02',)
2025-09-09 22:02:03,787 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_sec_level_changed_ev_
2025-09-09 22:02:03,787 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received b'\xe0N\xe4\x08\xdc\x1b\x00\x02'
2025-09-09 22:02:03,787 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : received (224, '001bdc08e44e', 2)
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x80, ctrl_index=0x00, data_len=0x01) bytearray(b'#\x80\x00\x01\x00')
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 1 bytes data
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'00'}, bytearray(b'\x00')
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=128, ctrl_index=0, data_len=1) (b'\x00',)
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_connected b'\x00'
2025-09-09 22:02:03,825 BTPWorkerThread-1940 (_rx_task) root ERROR client.py                 81    logger_log                : Connection failed with error code: (0,)
2025-09-09 22:02:04,176 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:04,177 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:04,177 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:04,179 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:04,181 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1004
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Discover operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:04,182 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:04,182 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:05,183 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:05,183 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1004, If necessary, take action to accept the AVDTP Discover operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:05,183 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1004 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:05,195 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:05,198 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1042
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Take action to accept transport channels for the recently configured media stream.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:05,198 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:05,198 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:06,197 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:06,197 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1042, Take action to accept transport channels for the recently configured media stream., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:06,197 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1042 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:06,197 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:06,206 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1002
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:06,206 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:06,206 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x23, op=0x88, ctrl_index=0x00, data_len=0x00) bytearray(b'#\x88\x00\x00\x00')
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=35, op=136, ctrl_index=0, data_len=0) (b'',)
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : a2dp_ev_disconnected b''
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x01, op=0x83, ctrl_index=0x00, data_len=0x07) bytearray(b'\x01\x83\x00\x07\x00')
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 7 bytes data
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {'e0 4e e4 08 dc 1b 00'}, bytearray(b'\xe0N\xe4\x08\xdc\x1b\x00')
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=1, op=131, ctrl_index=0, data_len=7) (b'\xe0N\xe4\x08\xdc\x1b\x00',)
2025-09-09 22:02:06,338 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : gap_disconnected_ev_ b'\xe0N\xe4\x08\xdc\x1b\x00'
2025-09-09 22:02:07,211 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:07,211 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1002, If necessary, take action to accept the AVDTP Signaling Channel Connection initiated by the tester.

Description: Make sure the IUT (Implementation Under Test) is in a state to accept incoming Bluetooth connections.  Some devices may need to be on a specific screen, like a Bluetooth settings screen, in order to pair with PTS.  If the IUT is still having problems pairing with PTS, try running a test case where the IUT connects to PTS to establish pairing., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:07,211 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1002 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:07,211 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:07,215 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1006
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Open operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:07,215 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:07,215 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1006, If necessary, take action to accept the AVDTP Open operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1006 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:08,216 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:08,226 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1009
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:08,226 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:08,226 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:09,225 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:09,225 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1009, If necessary, take action to accept the AVDTP Set Configuration operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:09,225 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1009 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:09,225 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:09,225 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1010
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: If necessary, take action to accept the AVDTP Start operation initiated by the tester.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:09,225 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:09,225 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:10,234 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:10,234 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1010, If necessary, take action to accept the AVDTP Start operation initiated by the tester., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:10,234 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1010 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:10,234 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:10,234 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    ********************
    BEGIN OnImplicitSend:
    project_name: A2DP
    wid: 1046
    test_case_name: A2DP/SRC/SET/BV-06-C
    description: Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media.
    style: MMI_Style_Ok_Cancel2 0x11141
2025-09-09 22:02:10,234 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : Calling test cases on_implicit_send
2025-09-09 22:02:10,234 LT1-callback ClientCallback.on_implicit_send INFO client.py                 81    logger_log                : 
    on_implicit_send returned response: WAIT
    END OnImplicitSend
    ********************
2025-09-09 22:02:11,241 LT1-thread root DEBUG client.py                 81    logger_log                : A2DP A2DP/SRC/SET/BV-06-C on_implicit_send
2025-09-09 22:02:11,241 LT1-thread root DEBUG client.py                 81    logger_log                : a2dp_wid_hdl, 1046, Begin streaming media ...

Note: If the IUT has suspended the stream please restart the stream to begin streaming media., A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:11,241 LT1-thread root DEBUG client.py                 81    logger_log                : Sending response 'OK' to wid 1046 test case A2DP/SRC/SET/BV-06-C
2025-09-09 22:02:11,241 LT1-thread root DEBUG client.py                 81    logger_log                : ClientCallback.get_result run_test_case
2025-09-09 22:02:11,250 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_START_TEST Start Test Case 

+1656 ms
 A2DP/SRC/SET/BV-06-C A2DP/SRC/SET/BV-06-C

2025-09-09 22:02:14,283 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_FINAL_VERDICT Final Verdict 

+122031 ms
 A2DP/SRC/SET/BV-06-C PASS

2025-09-09 22:02:14,303 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_FINAL_VERDICT Encrypted Verdict 

+122031 ms
 A2DP/SRC/SET/BV-06-C A1#ZGJkZmU5NThkOTY1MDkyZWJkYTE5NmE0ZjliOTQ2ZGZmMzI4MDcxODc0ODVjMTMyYTAyYWMxZTRkYmMyNmM4MA==#0YrFfYHvvPeELBuCIxmBtWtK8d7FCLtnDdKDbyzz/Gt6gY1PSVg/7O4uIuD5R1CD

2025-09-09 22:02:14,313 LT1-callback ClientCallback.log INFO client.py                 81    logger_log                : PTS_LOGTYPE_END_TEST Test Case Ended 

+122031 ms
 A2DP/SRC/SET/BV-06-C A2DP/SRC/SET/BV-06-C

2025-09-09 22:02:14,425 LT1-callback root DEBUG client.py                 81    logger_log                : ClientCallback, set_result, run_test_case, PASS
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : After run_test_case error_code=0 status='PASS'
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : post_run A2DP A2DP/SRC/SET/BV-06-C 0
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method Stack.cleanup of <autopts.ptsprojects.stack.stack.Stack object at 0x0000019970260DA0>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=() kwds={}
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : Starting test function: class=<class 'autopts.ptsprojects.testcase.TestFuncCleanUp'>, func=<bound method ZephyrCtl.stop of <autopts.ptsprojects.zephyr.iutctl.ZephyrCtl object at 0x0000019970396E40>> start_wid=None stop_wid=None post_wid=None skip_call=None call_count=2 args=() kwds={}
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : Test function parameters: args=(), kwds={}
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : <class 'autopts.ptsprojects.zephyr.iutctl.ZephyrCtl'>.stop
2025-09-09 22:02:14,425 LT1-thread root DEBUG client.py                 81    logger_log                : About to reset DUT: JLink -CommandFile reset.jlink -usb 1063214216 -device MIMXRT1176XXXA_M7
2025-09-09 22:02:14,858 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Read 5 bytes
2025-09-09 22:02:14,878 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received: hdr: Header(svc_id=0x00, op=0x80, ctrl_index=0xff, data_len=0x00) bytearray(b'\x00\x80\xff\x00\x00')
2025-09-09 22:02:14,898 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : Received data: {''}, bytearray(b'')
2025-09-09 22:02:14,928 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : event_handler Header(svc_id=0, op=128, ctrl_index=255, data_len=0) (b'',)
2025-09-09 22:02:14,948 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : core_iut_ready_ev
2025-09-09 22:02:14,948 LT1-thread root DEBUG client.py                 81    logger_log                : IUT ready event received OK
2025-09-09 22:02:14,948 LT1-thread root DEBUG client.py                 81    logger_log                : Waiting for _rx_worker to finish ...
2025-09-09 22:02:15,954 BTPWorkerThread-1940 (_rx_task) root DEBUG client.py                 81    logger_log                : BTPWorkerThread-1940 (_rx_task) finishing...
2025-09-09 22:02:15,954 LT1-thread root DEBUG client.py                 81    logger_log                : Waiting for _rx_worker to finish ...
2025-09-09 22:02:18,960 LT1-thread root DEBUG client.py                 81    logger_log                : post_run, cleanup running post test case script
2025-09-09 22:02:18,960 LT1-thread root DEBUG client.py                 81    logger_log                : post_run, run post test case script
2025-09-09 22:02:19,092 LT1-thread root DEBUG client.py                 81    logger_log                : Done TestCase _run_test_case A2DP A2DP/SRC/SET/BV-06-C
